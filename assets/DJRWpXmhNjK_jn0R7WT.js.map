{"version":3,"file":"DJRWpXmhNjK_jn0R7WT.js","sources":["../../app/components/ltFilesSelector.vue"],"sourcesContent":["<!-- eslint-disable vue/no-v-html -->\n<template>\n  <h2 v-if=\"!userInfo?.user\" class=\"mt-4\">{{ t('Sign in') }}</h2>\n  <p v-if=\"!userInfo?.user\">\n    <span>\n      {{ t('In order to allow locator-tool to modify file description pages, sign in first:') }}\n    </span>\n    <a class=\"btn btn-success ms-2\" :href=\"loginURL()\">\n      <DoorOpen class=\"me-1\" />\n      <span>{{ t('Log in') }}</span>\n    </a>\n  </p>\n  <p v-if=\"userInfo?.user\" class=\"mt-4\">{{ msgLoggedIn }}</p>\n  <h2>{{ t('Select files to geolocate') }}</h2>\n  <ul class=\"nav nav-pills my-3\">\n    <li class=\"nav-item\">\n      <button\n        class=\"nav-link\"\n        :class=\"{active: $tab === Tab.CATEGORY}\"\n        @click=\"$tab = Tab.CATEGORY\"\n      >\n        {{ t('Category') }}\n      </button>\n    </li>\n    <li class=\"nav-item\">\n      <button class=\"nav-link\" :class=\"{active: $tab === Tab.USER}\" @click=\"$tab = Tab.USER\">\n        {{ t('User files') }}\n      </button>\n    </li>\n    <li class=\"nav-item\">\n      <button class=\"nav-link\" :class=\"{active: $tab === Tab.FILES}\" @click=\"$tab = Tab.FILES\">\n        {{ t('File list') }}\n      </button>\n    </li>\n  </ul>\n  <form v-show=\"$tab === Tab.USER\" @submit.stop.prevent=\"nextForCategory()\">\n    <div class=\"mb-4\">\n      <label for=\"inputUser\">{{ t('User') }}</label>\n      <input\n        id=\"inputUser\"\n        v-model=\"user\"\n        class=\"form-control\"\n        list=\"datalistUser\"\n        placeholder=\"User:…\"\n      />\n    </div>\n    <div class=\"row\">\n      <div class=\"mb-4 col-sm-4\">\n        <label for=\"inputUserLimit\" translate-comment=\"maximum number of files\">\n          {{ t('Limit') }}\n        </label>\n        <input id=\"inputUserLimit\" v-model=\"userLimit\" class=\"form-control\" type=\"number\" />\n      </div>\n      <div class=\"mb-4 col-sm-4\">\n        <label for=\"inputUserStart\">{{ t('Start timestamp') }}</label>\n        <input id=\"inputUserStart\" v-model=\"userStart\" class=\"form-control\" type=\"date\" />\n      </div>\n      <div class=\"mb-4 col-sm-4\">\n        <label for=\"inputUserEnd\">{{ t('End timestamp') }}</label>\n        <input id=\"inputUserEnd\" v-model=\"userEnd\" class=\"form-control\" type=\"date\" />\n      </div>\n    </div>\n    <div class=\"mb-4\">\n      <button class=\"btn btn-success me-2\" :disabled=\"!user\" @click=\"nextForUser()\">\n        <GeoAlt class=\"me-1\" />\n        <span>{{ t('Load User files to geolocate') }}</span>\n      </button>\n      <button class=\"btn btn-secondary me-2\" :disabled=\"!user\" @click=\"nextForUser('map')\">\n        <GlobeEuropeAfrica class=\"me-1\" />\n        <span>{{ t('Show User files on map') }}</span>\n      </button>\n      <button class=\"btn btn-secondary me-2\" :disabled=\"!user\" @click=\"nextForUser('gallery')\">\n        <FileImage class=\"me-1\" />\n        <span>{{ t('Show User files as gallery') }}</span>\n      </button>\n      <input class=\"invisible\" type=\"submit\" :disabled=\"!user\" />\n      <lt-spinner v-if=\"isLoading\" />\n      <datalist id=\"datalistUser\">\n        <option v-for=\"i in userSuggestions\" :key=\"i\" :value=\"i\"></option>\n      </datalist>\n    </div>\n  </form>\n  <form v-show=\"$tab === Tab.CATEGORY\" @submit.stop.prevent=\"nextForCategory()\">\n    <div class=\"row\">\n      <div class=\"mb-4 col-lg-10\">\n        <label for=\"inputCategory\">{{ t('Category') }}</label>\n        <input\n          id=\"inputCategory\"\n          v-model=\"category\"\n          class=\"form-control\"\n          list=\"datalistCategory\"\n          placeholder=\"Category:…\"\n        />\n      </div>\n      <div class=\"mb-4 col-lg-2\">\n        <label\n          for=\"inputCategoryDepth\"\n          translate-comment=\"Depth of category tree\"\n          translate-context=\"Category\"\n        >\n          {{ t('Depth') }}\n        </label>\n        <input id=\"inputCategoryDepth\" v-model=\"categoryDepth\" class=\"form-control\" type=\"number\" />\n      </div>\n    </div>\n    <div class=\"mb-4\">\n      <button class=\"btn btn-success me-2\" :disabled=\"!category\" @click=\"nextForCategory()\">\n        <GeoAlt class=\"me-1\" />\n        <span>{{ t('Load Category to geolocate') }}</span>\n      </button>\n      <button class=\"btn btn-secondary me-2\" :disabled=\"!category\" @click=\"nextForCategory('map')\">\n        <GlobeEuropeAfrica class=\"me-1\" />\n        <span>{{ t('Show Category on map') }}</span>\n      </button>\n      <button\n        class=\"btn btn-secondary me-2\"\n        :disabled=\"!category\"\n        @click=\"nextForCategory('gallery')\"\n      >\n        <FileImage class=\"me-1\" />\n        <span>{{ t('Show Category as gallery') }}</span>\n      </button>\n      <input class=\"invisible\" type=\"submit\" :disabled=\"!category\" />\n    </div>\n    <lt-spinner v-if=\"isLoading\" />\n    <datalist id=\"datalistCategory\">\n      <option v-for=\"i in categorySuggestions\" :key=\"i\" :value=\"i\"></option>\n    </datalist>\n  </form>\n  <form v-show=\"$tab === Tab.FILES\" @submit.stop.prevent=\"nextForCategory()\">\n    <div class=\"mb-4\">\n      <label for=\"inputTitles\">{{ t('File list') }}</label>\n      <textarea\n        id=\"inputTitles\"\n        v-model=\"titles\"\n        class=\"form-control\"\n        rows=\"10\"\n        placeholder=\"File:…\"\n        @paste=\"onFilesPaste($event)\"\n      ></textarea>\n      <p\n        class=\"form-text\"\n        v-html=\"\n          t(\n            'When a clipboard content containing HTML code (for instance a copied selection from a Commons gallery) is pasted here, locator-tool tries to extract <code>File:</code>s from the code.'\n          )\n        \"\n      ></p>\n    </div>\n    <div class=\"mb-4\">\n      <button class=\"btn btn-success me-2\" :disabled=\"!titleList.length\" @click=\"next()\">\n        <GeoAlt class=\"me-1\" />\n        <span>{{ msgLoadGeolocate }}</span>\n      </button>\n      <button class=\"btn btn-secondary me-2\" :disabled=\"!titleList.length\" @click=\"next('map')\">\n        <GlobeEuropeAfrica class=\"me-1\" />\n        <span>{{ msgShowMap }}</span>\n      </button>\n      <button class=\"btn btn-secondary me-2\" :disabled=\"!titleList.length\" @click=\"next('gallery')\">\n        <FileImage class=\"me-1\" />\n        <span>{{ msgShowGallery }}</span>\n      </button>\n    </div>\n  </form>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, ref} from 'vue';\nimport {watchDebounced} from '@vueuse/core';\nimport * as ltData from '../api/ltData';\nimport {getUserInfo, loginURL} from '../api/ltDataAuth';\nimport {useRoute, useRouter} from 'vue-router';\nimport ltSpinner from './ltSpinner.vue';\nimport {t} from './useI18n';\nimport DoorOpen from 'bootstrap-icons/icons/door-open.svg?component';\nimport FileImage from 'bootstrap-icons/icons/file-image.svg?component';\nimport GeoAlt from 'bootstrap-icons/icons/geo-alt.svg?component';\nimport GlobeEuropeAfrica from 'bootstrap-icons/icons/globe-europe-africa.svg?component';\n\nenum Tab {\n  CATEGORY = 1,\n  USER = 2,\n  FILES = 3\n}\n\nconst $route = useRoute();\nconst $routes = useRouter();\n\nconst isLoading = ref(false);\nconst $tab = ref<Tab>($route.query.user ? Tab.USER : Tab.CATEGORY);\nconst category = ref<string>($route.query.category as string);\nconst categoryDepth = ref(tryParse(parseInt, $route.query.categoryDepth as string, 3));\nconst categorySuggestions = ref<string[]>([]);\nconst user = ref<string>($route.query.user as string);\nconst userLimit = ref(tryParse(parseInt, $route.query.userLimit as string, undefined));\nconst userStart = ref<string>($route.query.userStart as string);\nconst userEnd = ref<string>($route.query.userEnd as string);\nconst userSuggestions = ref<string[]>([]);\nconst titles = ref<string>('');\n\nfunction tryParse<T>(parser: (string: string) => T, text: string, fallback: T): T {\n  if (!text) {\n    return fallback;\n  }\n  try {\n    return parser(text as string);\n  } catch (ex) {\n    return fallback;\n  }\n}\n\nconst {data: userInfo} = getUserInfo();\n\nwatchDebounced(\n  category,\n  async category => {\n    isLoading.value = true;\n    try {\n      categorySuggestions.value = await ltData.getCategoriesForPrefix(category);\n    } finally {\n      isLoading.value = false;\n    }\n  },\n  {debounce: 500}\n);\n\nwatchDebounced(\n  user,\n  async user => {\n    isLoading.value = true;\n    try {\n      userSuggestions.value = await ltData.getUsersForPrefix(user);\n      console.log(userSuggestions.value);\n    } finally {\n      isLoading.value = false;\n    }\n  },\n  {debounce: 500}\n);\n\nfunction next(name = 'geolocate') {\n  const files = titleList.value.join('|');\n  $routes.push({name, query: {files}});\n}\n\nfunction nextForUser(name = 'geolocate') {\n  $routes.push({\n    name,\n    query: {\n      user: user.value,\n      userLimit: userLimit.value,\n      userStart: userStart.value,\n      userEnd: userEnd.value\n    }\n  });\n}\n\nfunction nextForCategory(name = 'geolocate') {\n  $routes.push({\n    name,\n    query: {\n      category: category.value,\n      categoryDepth: categoryDepth.value\n    }\n  });\n}\n\nconst titleList = computed<string[]>({\n  get: () =>\n    titles.value\n      .split('\\n')\n      .map(file => file?.split('|')[0])\n      .filter(x => x),\n  set: files => (titles.value = files?.join('\\n'))\n});\n\nfunction onFilesPaste($event: ClipboardEvent) {\n  try {\n    if (!$event.clipboardData) return;\n    const html = $event.clipboardData.getData('text/html');\n    if (!html || !/<a/.test(html)) return;\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, 'text/html');\n    const links = doc.getElementsByTagName('a');\n    const files: Record<string, boolean> = {};\n    [...links]\n      .map(a => decodeURI(a.href))\n      .filter(href => !!href)\n      .map(href => href.replace(/.*File:/, 'File:'))\n      .forEach(file => (files[file] = true));\n    titleList.value = Object.keys(files);\n    $event.preventDefault();\n  } catch (ex) {\n    console.warn('Could not parse HTML clipboard content', ex);\n  }\n}\n\nconst msgLoggedIn = computed(() =>\n  t('Hello {{$ctrl.userInfo}}!').replace('{{$ctrl.userInfo}}', userInfo.value?.user)\n);\nconst msgLoadGeolocate = computed(() =>\n  t('Load {{$ctrl.titleList.length}} files to geolocate').replace(\n    '{{$ctrl.titleList.length}}',\n    titleList.value.length\n  )\n);\nconst msgShowMap = computed(() =>\n  t('Show {{$ctrl.titleList.length}} files on map').replace(\n    '{{$ctrl.titleList.length}}',\n    titleList.value.length\n  )\n);\nconst msgShowGallery = computed(() =>\n  t('Show {{$ctrl.titleList.length}} files as gallery').replace(\n    '{{$ctrl.titleList.length}}',\n    titleList.value.length\n  )\n);\n</script>\n"],"names":["$route","useRoute","$routes","useRouter","isLoading","ref","$tab","category","categoryDepth","tryParse","categorySuggestions","user","userLimit","userStart","userEnd","userSuggestions","titles","parser","text","fallback","userInfo","getUserInfo","watchDebounced","ltData.getCategoriesForPrefix","ltData.getUsersForPrefix","next","name","files","titleList","nextForUser","nextForCategory","computed","file","x","onFilesPaste","$event","html","links","a","href","ex","msgLoggedIn","t","_a","msgLoadGeolocate","msgShowMap","msgShowGallery"],"mappings":"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"}